#!groovy

/**
 * Jenkinsfile for Wazuh
 * Copyright (C) 2015-2019, Wazuh Inc.
 * November 19, 2016.
 *
 * This program is a free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

def labels = ['ubuntu-xenial-slave', 'ubuntu-trusty-slave', 'ubuntu-precise-slave', 'debian-jessie-slave', 'debian-wheezy-slave', 'centos-7-slave', 'centos-6-slave', 'centos-5-slave']

//Stage checkout source
def check_source(label){
    checkout scm
}


//Stage unit tests
def unit_tests(label){
  if( label != 'centos-6-slave' && label != 'centos-5-slave'){

      dir('src'){
          sh 'sudo make --warn-undefined-variables test_valgrind'
          sh 'sudo make clean'
      }
  }
}


//Stage standard ossec compilations
def  standard_compilations(label){  
    dir ('src') {
        if(  label != 'centos-5-slave'){
            sh 'sudo make --warn-undefined-variables V=1 TARGET=agent install'
            sh 'sudo make clean && sudo rm -rf /var/ossec/'
            sh 'sudo make --warn-undefined-variables V=1 TARGET=server install'
            sh 'sudo make clean'
        } else{
            sh 'sudo make --warn-undefined-variables USE_LEGACY_SSL=yes V=1 TARGET=agent install'
            sh 'sudo make clean && sudo rm -rf /var/ossec/'
            sh 'sudo make --warn-undefined-variables USE_LEGACY_SSL=yes V=1 TARGET=server install'
            sh 'sudo make clean'
        }
    } 
} 


//Stage rule tests
def rule_tests(label){ 
    dir ('src') {
        sh 'sudo make V=1 TARGET=server test-rules'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
    }
}


//Stage advanced ossec compilation
def advanced_compilations(label){
    
    dir ('src') {
        if(  label != 'centos-5-slave'){
            sh 'sudo make --warn-undefined-variables V=1 TARGET=local install'
        } else {
            sh 'sudo make --warn-undefined-variables USE_LEGACY_SSL=yes V=1 TARGET=local install'
        }
        
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
         
        if(  label != 'centos-5-slave'){
            sh 'sudo make --warn-undefined-variables V=1 TARGET=hybrid install'
        } else {
            sh 'sudo make --warn-undefined-variables USE_LEGACY_SSL=yes V=1 TARGET=hybrid install'
        }
        
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
    
        def matrixOptionsX = ['DATABASE=none', 'DATABASE=pgsql', 'DATABASE=mysql']
        def matrixOptionsY = ['USE_GEOIP=1', '']    
        
        
        for (optionX in matrixOptionsX){
            for (optionY in matrixOptionsY) {
                if(  label != 'centos-5-slave'){
                    sh 'sudo make --warn-undefined-variables  V=1 TARGET=server '+optionX+' '+optionY+' install'
                } else {
                    sh 'sudo make --warn-undefined-variables USE_LEGACY_SSL=yes V=1 TARGET=server '+optionX+' '+optionY+' install'
                }
                sh 'sudo make clean && sudo rm -rf /var/ossec/'
            }
        }
    }
}

//Stage windows compilation
def windows_compilation(label){ 
    if(label != 'ubuntu-precise-slave' && label != 'debian-wheezy-slave' && label != 'centos-5-slave'){
      dir ('src') {
          sh 'sudo make --warn-undefined-variables TARGET=winagent'
          sh 'sudo make clean && sudo rm -rf /var/ossec/'
      }
    }
}

for (label in labels) {
    
    stage (label){
    
        node(label) {
            stage ('Checkout SCM'){
                check_source(label)
            }
            
            stage ('Unit Tests'){
                unit_tests(label)
            }
            
            stage ('Standard Compilations'){
                standard_compilations(label)
            }
            
            stage ('Rule Tests'){
                rule_tests(label)
            }
            
            stage ('Advanced Compilations'){
                advanced_compilations(label)
            }
            
            stage ('Windows Compilation'){
                windows_compilation(label)
            }
        }
    }
}
